syntax = "proto3";
package auth;
option go_package="github.com/Zhoangp/Api_Gateway-Courses/services/auth/pb";
import "services/error/pb/error.proto";
import "services/user/pb/user.proto";

//AuthService define  rpc
service AuthService {
  rpc Register(RegisterRequest)returns(RegisterResponse);
  rpc Login(LoginRequest)returns(LoginResponse);
  //rpc Validate(ValidateRequest)returns(ValidateResponse);
  rpc NewToken(NewTokenRequest)returns(NewTokenResponse);
  rpc VerifyAccount(VerifyAccountRequest)returns(VerifyAccountResponse);
  rpc GetTokenVerifyAccount(VerifyAccountRequest)returns(VerifyAccountResponse);
  rpc GetTokenResetPassword(VerifyAccountRequest)returns(VerifyAccountResponse);

}
// information when register
message RegisterRequest {
  string firstName = 1;
  string lastName = 2;
  string email = 3;
  string password = 4;
  string phoneNumber = 5;
  string address = 6;
  string role = 7;
}
message RegisterResponse {
  error.ErrorResponse error = 1;
}
//information when login
message LoginRequest {
  string email = 1;
  string password = 2;
}
message LoginResponse {
  user.User information = 1;
  string accessToken = 2;
  string refreshToken = 3;
  uint32 expiresAt = 4;
  string tokenType = 5;
  error.ErrorResponse error = 6;
}
//
//message ValidateRequest {
//  string token = 1;
//}
//message ValidateResponse {
//  int64 userId = 1;
//  error.ErrorResponse error = 2;
//}

//RefreshToken
message NewTokenRequest {
  string refreshToken = 1;
}
message NewTokenResponse {
  string accessToken = 1;
  uint32 expiresAt = 2;
  error.ErrorResponse error = 3;
}


message VerifyAccountRequest {
  string email = 1;
  string password = 2;
}
message VerifyAccountResponse {
  error.ErrorResponse error = 1;
}





